name: GXC Build.sh

on:
  workflow_dispatch:
    inputs:
      TOOLCHAIN_URL:
        description: "Clone URL of your toolchain or tarball URL"
        required: true
        default: 'https://raw.githubusercontent.com/ZyCromerZ/Clang/main/Clang-main-link.txt'
      APATCH:
        description: "Apatch Configuration setup"
        required: true
        type: choice
        options:
          - "Enable"
          - "Disable"
        default: "Enable"

jobs:
  Kernel:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: Cleanup
        run: rm -rf ${{ github.workspace }}/*

      - name: Update system
        run: |
          sudo apt-get update
          sudo apt-get upgrade

      - name: Clone kernel source
        run: git clone https://github.com/GXC2356/platform_kernel_xiaomi_vayu.git -b main --depth=1 .

      - name: Install required debs
        run: bash tools/build/packages.sh
        
      - name: Apatch Configuration
        if: ${{ github.event.inputs.APATCH == 'Enable' }}
        run: |
          grep -q '^CONFIG_KALLSYMS=' arch/arm64/configs/vayu_user_defconfig || echo 'CONFIG_KALLSYMS=y' >> arch/arm64/configs/vayu_user_defconfig
          grep -q '^CONFIG_KALLSYMS_ALL=' arch/arm64/configs/vayu_user_defconfig || echo 'CONFIG_KALLSYMS_ALL=y' >> arch/arm64/configs/vayu_user_defconfig
          
      - name: Cloning Toolchain
        run: |
          TOOLCHAIN_URL="${{ github.event.inputs.TOOLCHAIN_URL }}"
          mkdir -p ${{ github.workspace }}/toolchain

          if [[ $TOOLCHAIN_URL == *.txt ]]; then
            actual_url=$(curl -s "$TOOLCHAIN_URL")
            curl -L "$actual_url" -o toolchain.tar.gz
            tar -xzf toolchain.tar.gz -C ${{ github.workspace }}/toolchain
            rm toolchain.tar.gz
          elif [[ "$TOOLCHAIN_URL" == *.tar.gz || "$TOOLCHAIN_URL" == *.tar.bz2 || "$TOOLCHAIN_URL" == *.tar.xz ]]; then
            curl -L "$TOOLCHAIN_URL" -o toolchain.tar.gz
            tar -xzf toolchain.tar.gz -C ${{ github.workspace }}/toolchain
            rm toolchain.tar.gz
          else
            git clone --single-branch --depth=1 --no-tags ${{ github.event.inputs.TOOLCHAIN_URL }} ${{ github.workspace }}/toolchain
          fi
      
      - name: Start Compilation
        run: |
          sed -i "s|CLANG_DIR=.*|CLANG_DIR=${PWD}/toolchain|" tools/build/build.sh
          cat tools/build/build.sh
          bash tools/build/build.sh

      - name: Set-up files
        run: |
          # Set-up files info
          zip_file=$(find $HOME -name 'Skyline*.zip' -print -quit)
          echo "ZIP_FILE=$zip_file" >> $GITHUB_ENV
          echo "ZIP_NAME=$(basename "$zip_file" .zip)" >> $GITHUB_ENV

      - name: Upload files to repository releases page
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ZIP_FILE }}
          name: ${{ env.ZIP_NAME }}
          tag_name: ${{ github.run_id }}
          body: |
            Non KernelSU
